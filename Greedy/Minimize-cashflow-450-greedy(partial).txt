#include<bits/stdc++.h>
vector<vector<int>> minCashFlow(vector<vector<int>>& transaction, int n)
{
    vector<vector<int>> result(n,vector<int>(n,0));
    multiset<pair<int,int>> amt;
    for(int i=0;i<n;++i)
    {
        int give=0,take=0;
        for(int j=0;j<n;++j)
        {
            if(i!=j)
            {
                give+=transaction[i][j];
            	take+=transaction[j][i];
            }
        }
        if(take-give!=0)
        	amt.insert({(take-give),i});
    }
    while(!amt.empty())
    {
        pair<int,int> less,more;
        less=*amt.begin(); amt.erase(amt.begin());
        more=*amt.rbegin(); amt.erase(prev(amt.end()));
        int amount=min(-less.first,more.first);
        less.first+=amount;
        more.first-=amount;
        result[less.second][more.second]=amount;
        if(less.first!=0)
            amt.insert(less);
        if(more.first!=0)
            amt.insert(more);
    }
    return result;
}