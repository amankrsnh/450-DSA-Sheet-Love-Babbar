// { Driver Code Starts
//Initial template for C++

#include <bits/stdc++.h>
using namespace std;


 // } Driver Code Ends
//User function template for C++

class Solution{
public:

    //  Iterative 
    
    int binarysearch(int arr[], int n, int k)
    {
        int start=0,end=n;
        while(start<end)
        {
            int mid=(start+end)/2;
            if(arr[mid]==k)
                return mid;
            else if(arr[mid]<k)
                start=mid+1;
            else if(arr[mid]>k)
                end=mid;
        }
        return -1;   
    }
    
    
    // recursive
    
    int start=0;
    
    int binarysearch(int arr[], int n, int k)
    {
        if(start<n)
        {
            int mid=(start+n)/2;
            if(arr[mid]==k)
                return mid;
            else if(arr[mid]<k)
            {
                start=mid+1;
                return binarysearch(arr,n,k);
            }
            else if(arr[mid]>k)
            {
                return binarysearch(arr,mid,k);
            }
        }
        return -1;   
    }
    
};

// { Driver Code Starts.
int main()
{
    int t;
    cin>>t;

    while(t--)
    {
        int N;
        cin>>N;
        int arr[N];
        for(int i=0;i<N;i++)
            cin>>arr[i];
        int key;
        cin>>key;
        Solution ob;
        int found = ob.binarysearch(arr,N,key);
        cout<<found<<endl;
    }
}

  // } Driver Code Ends