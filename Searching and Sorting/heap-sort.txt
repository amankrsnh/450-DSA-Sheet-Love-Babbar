// { Driver Code Starts
// C++ program for implementation of Heap Sort
#include <bits/stdc++.h>
using namespace std;


 // } Driver Code Ends
// The functions should be written in a way that array become sorted 
// in increasing order when heapSort() is called.

class Solution
{
    public:
    void heapify(int arr[], int n, int i) 
    {
        if(i<n)
        {
            int root=i,l=root*2+1,r=root*2+2,m=-1;
            if(l<n && r<n)
                m=(max(arr[l],arr[r])==arr[l]?l:r);
            else if(l<n)
                m=l;
            if(arr[m]>arr[i] && m!=-1)
            {
                swap(arr[m],arr[i]);
                heapify(arr,n,m);
            }
        }
    }
    
    // Main function to do heap sort
    void heapSort(int arr[], int n) 
    {
        int t=n;
        for(int i=n/2-1;i>=0;--i)
        {
            heapify(arr,n,i);
        }
        for(int i=n-1;i>=0;--i)
        {
            swap(arr[0],arr[i]);
            heapify(arr,i,0);
        }
    }
};




// { Driver Code Starts.

/* Function to print an array */
void printArray(int arr[], int size)
{
    int i;
    for (i=0; i < size; i++)
        printf("%d ", arr[i]);
    printf("\n");
}

// Driver program to test above functions
int main()
{
    int arr[1000000],n,T,i;
    scanf("%d",&T);
    while(T--){
    scanf("%d",&n);
    for(i=0;i<n;i++)
      scanf("%d",&arr[i]);
    Solution ob;
    ob.heapSort(arr, n);
    printArray(arr, n);
    }
    return 0;
}
  // } Driver Code Ends