// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;
vector<int> find(int a[], int n , int x );

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n,x;
        cin>>n>>x;
        int arr[n],i;
        for(i=0;i<n;i++)
        cin>>arr[i];
        vector<int> ans;
        ans=find(arr,n,x);
        cout<<ans[0]<<" "<<ans[1]<<endl;
    }
    return 0;
}


// } Driver Code Ends


int first(int arr[],int n,int x)
{
    int lo=0,hi=n-1;
    while(lo<=hi)
    {
        int mid=(lo+hi)/2;
        if((mid==0 || arr[mid-1]<x)&& arr[mid]==x)
            return mid;
        else if(arr[mid]<x)
            lo=mid+1;
        else if(arr[mid]>=x)
            hi=mid-1;
    }
    return -1;
}

int last(int arr[],int n,int x)
{
    int lo=0,hi=n-1;
    while(lo<=hi)
    {
        int mid=(lo+hi)/2;
        if((mid==n-1 || arr[mid+1]>x)&& arr[mid]==x)
            return mid;
        else if(arr[mid]<=x)
            lo=mid+1;
        else if(arr[mid]>x)
            hi=mid-1;
    }
    return -1;
}

vector<int> find(int arr[], int n , int x )
{
    return {first(arr,n,x),last(arr,n,x)};
}

/*
    vector<int> find(int arr[], int n , int x )
    {
        int f=-1,l=-1;
        for(int i=0;i<n;++i)
        {
            if(arr[i]==x && f==-1)
                f=i;
            else if(i!=n-1 && arr[i]==x && arr[i+1]>x && l==-1)
                l=i;
            else if(i==n-1 && arr[i]==x && l==-1)
                l=i;
            if(f!=-1 && l!=-1)
                break;
        }
        if(l==-1)
            l=f;
        return {f,l};
    }
*/